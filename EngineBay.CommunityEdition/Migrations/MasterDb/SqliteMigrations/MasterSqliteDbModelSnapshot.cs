// <auto-generated />
using System;
using EngineBay.CommunityEdition;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EngineBay.CommunityEdition.Migrations.MasterDb.SqliteMigrations
{
    [DbContext(typeof(MasterSqliteDb))]
    partial class MasterSqliteDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("EngineBay.ActorEngine.DataVariableState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptedValue")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Identity")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Identity");

                    b.HasIndex("Namespace");

                    b.HasIndex("SessionId");

                    b.HasIndex("Name", "Namespace", "Type", "SessionId", "CreatedAt")
                        .IsUnique();

                    b.ToTable("DataVariableStates", (string)null);
                });

            modelBuilder.Entity("EngineBay.ActorEngine.SessionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptedMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("LogLevel")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LogLevel");

                    b.HasIndex("SessionId");

                    b.ToTable("SessionLogs", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.Blueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WorkbookId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("WorkbookId");

                    b.HasIndex("Name", "WorkbookId")
                        .IsUnique();

                    b.ToTable("Blueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("Name", "BlueprintId")
                        .IsUnique();

                    b.ToTable("DataTableBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableCellBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataTableRowBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DataTableRowBlueprintId");

                    b.HasIndex("LastUpdatedById");

                    b.ToTable("DataTableCellBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableColumnBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataTableBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DataTableBlueprintId");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("Name", "DataTableBlueprintId")
                        .IsUnique();

                    b.ToTable("DataTableColumnBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableRowBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataTableBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DataTableBlueprintId");

                    b.HasIndex("LastUpdatedById");

                    b.ToTable("DataTableRowBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataVariableBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("Name", "BlueprintId", "Namespace")
                        .IsUnique();

                    b.ToTable("DataVariableBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.ExpressionBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Objective")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OutputDataVariableBlueprintId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("OutputDataVariableBlueprintId")
                        .IsUnique();

                    b.ToTable("ExpressionBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.InputDataTableBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ExpressionBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ExpressionBlueprintId");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("Name", "Namespace", "ExpressionBlueprintId")
                        .IsUnique();

                    b.ToTable("InputDataTableBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.InputDataVariableBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataTableBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ExpressionBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TriggerExpressionBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DataTableBlueprintId");

                    b.HasIndex("ExpressionBlueprintId");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("TriggerExpressionBlueprintId")
                        .IsUnique();

                    b.ToTable("InputDataVariableBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.OutputDataVariableBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ExpressionBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TriggerBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("TriggerBlueprintId")
                        .IsUnique();

                    b.HasIndex("Name", "ExpressionBlueprintId", "TriggerBlueprintId", "Namespace")
                        .IsUnique();

                    b.ToTable("OutputDataVariableBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.TriggerBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OutputDataVariableBlueprintId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("Name", "BlueprintId", "OutputDataVariableBlueprintId")
                        .IsUnique();

                    b.ToTable("TriggerBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.TriggerExpressionBlueprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InputDataVariableBlueprintId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Objective")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TriggerBlueprintId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.HasIndex("TriggerBlueprintId");

                    b.HasIndex("Expression", "TriggerBlueprintId", "InputDataVariableBlueprintId")
                        .IsUnique();

                    b.ToTable("TriggerExpressionBlueprints", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.Workbook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastUpdatedById");

                    b.ToTable("Workbooks", (string)null);
                });

            modelBuilder.Entity("EngineBay.Persistence.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("ApplicationUsers", (string)null);
                });

            modelBuilder.Entity("EngineBay.Persistence.AuditEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("AuditEntries", (string)null);
                });

            modelBuilder.Entity("EngineBay.Persistence.BasicAuthCredential", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastUpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.ToTable("BasicAuthCredentials", (string)null);
                });

            modelBuilder.Entity("EngineBay.Blueprints.Blueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.Workbook", "Workbook")
                        .WithMany("Blueprints")
                        .HasForeignKey("WorkbookId");

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");

                    b.Navigation("Workbook");
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableBlueprint", b =>
                {
                    b.HasOne("EngineBay.Blueprints.Blueprint", "Blueprint")
                        .WithMany("DataTableBlueprints")
                        .HasForeignKey("BlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blueprint");

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableCellBlueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.DataTableRowBlueprint", "DataTableRowBlueprint")
                        .WithMany("DataTableCellBlueprints")
                        .HasForeignKey("DataTableRowBlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("DataTableRowBlueprint");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableColumnBlueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.DataTableBlueprint", "DataTableBlueprint")
                        .WithMany("DataTableColumnBlueprints")
                        .HasForeignKey("DataTableBlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("DataTableBlueprint");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableRowBlueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.DataTableBlueprint", "DataTableBlueprint")
                        .WithMany("DataTableRowBlueprints")
                        .HasForeignKey("DataTableBlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("DataTableBlueprint");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataVariableBlueprint", b =>
                {
                    b.HasOne("EngineBay.Blueprints.Blueprint", "Blueprint")
                        .WithMany("DataVariableBlueprints")
                        .HasForeignKey("BlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blueprint");

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Blueprints.ExpressionBlueprint", b =>
                {
                    b.HasOne("EngineBay.Blueprints.Blueprint", "Blueprint")
                        .WithMany("ExpressionBlueprints")
                        .HasForeignKey("BlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.OutputDataVariableBlueprint", "OutputDataVariableBlueprint")
                        .WithOne("ExpressionBlueprint")
                        .HasForeignKey("EngineBay.Blueprints.ExpressionBlueprint", "OutputDataVariableBlueprintId");

                    b.Navigation("Blueprint");

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");

                    b.Navigation("OutputDataVariableBlueprint");
                });

            modelBuilder.Entity("EngineBay.Blueprints.InputDataTableBlueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.ExpressionBlueprint", "ExpressionBlueprint")
                        .WithMany("InputDataTableBlueprints")
                        .HasForeignKey("ExpressionBlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ExpressionBlueprint");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Blueprints.InputDataVariableBlueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.DataTableBlueprint", "DataTableBlueprint")
                        .WithMany("InputDataVariableBlueprints")
                        .HasForeignKey("DataTableBlueprintId");

                    b.HasOne("EngineBay.Blueprints.ExpressionBlueprint", "ExpressionBlueprint")
                        .WithMany("InputDataVariableBlueprints")
                        .HasForeignKey("ExpressionBlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.TriggerExpressionBlueprint", "TriggerExpressionBlueprint")
                        .WithOne("InputDataVariableBlueprint")
                        .HasForeignKey("EngineBay.Blueprints.InputDataVariableBlueprint", "TriggerExpressionBlueprintId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedBy");

                    b.Navigation("DataTableBlueprint");

                    b.Navigation("ExpressionBlueprint");

                    b.Navigation("LastUpdatedBy");

                    b.Navigation("TriggerExpressionBlueprint");
                });

            modelBuilder.Entity("EngineBay.Blueprints.OutputDataVariableBlueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.TriggerBlueprint", "TriggerBlueprint")
                        .WithOne("OutputDataVariableBlueprint")
                        .HasForeignKey("EngineBay.Blueprints.OutputDataVariableBlueprint", "TriggerBlueprintId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");

                    b.Navigation("TriggerBlueprint");
                });

            modelBuilder.Entity("EngineBay.Blueprints.TriggerBlueprint", b =>
                {
                    b.HasOne("EngineBay.Blueprints.Blueprint", "Blueprint")
                        .WithMany("TriggerBlueprints")
                        .HasForeignKey("BlueprintId");

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Blueprint");

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Blueprints.TriggerExpressionBlueprint", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Blueprints.TriggerBlueprint", "TriggerBlueprint")
                        .WithMany("TriggerExpressionBlueprints")
                        .HasForeignKey("TriggerBlueprintId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");

                    b.Navigation("TriggerBlueprint");
                });

            modelBuilder.Entity("EngineBay.Blueprints.Workbook", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EngineBay.Persistence.ApplicationUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("LastUpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUpdatedBy");
                });

            modelBuilder.Entity("EngineBay.Persistence.AuditEntry", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("EngineBay.Persistence.BasicAuthCredential", b =>
                {
                    b.HasOne("EngineBay.Persistence.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("EngineBay.Blueprints.Blueprint", b =>
                {
                    b.Navigation("DataTableBlueprints");

                    b.Navigation("DataVariableBlueprints");

                    b.Navigation("ExpressionBlueprints");

                    b.Navigation("TriggerBlueprints");
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableBlueprint", b =>
                {
                    b.Navigation("DataTableColumnBlueprints");

                    b.Navigation("DataTableRowBlueprints");

                    b.Navigation("InputDataVariableBlueprints");
                });

            modelBuilder.Entity("EngineBay.Blueprints.DataTableRowBlueprint", b =>
                {
                    b.Navigation("DataTableCellBlueprints");
                });

            modelBuilder.Entity("EngineBay.Blueprints.ExpressionBlueprint", b =>
                {
                    b.Navigation("InputDataTableBlueprints");

                    b.Navigation("InputDataVariableBlueprints");
                });

            modelBuilder.Entity("EngineBay.Blueprints.OutputDataVariableBlueprint", b =>
                {
                    b.Navigation("ExpressionBlueprint");
                });

            modelBuilder.Entity("EngineBay.Blueprints.TriggerBlueprint", b =>
                {
                    b.Navigation("OutputDataVariableBlueprint");

                    b.Navigation("TriggerExpressionBlueprints");
                });

            modelBuilder.Entity("EngineBay.Blueprints.TriggerExpressionBlueprint", b =>
                {
                    b.Navigation("InputDataVariableBlueprint");
                });

            modelBuilder.Entity("EngineBay.Blueprints.Workbook", b =>
                {
                    b.Navigation("Blueprints");
                });
#pragma warning restore 612, 618
        }
    }
}
